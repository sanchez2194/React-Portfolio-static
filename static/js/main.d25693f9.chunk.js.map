{"version":3,"sources":["utils/API.js","components/Alert/index.js","pages/Discover.js","components/Hero/index.js","components/Container/index.js","components/Row/index.js","components/Col/index.js","pages/About.js","components/SearchForm/index.js","components/SearchResults/index.js","pages/Search.js","components/Navbar/index.js","components/Footer/index.js","components/Wrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["axios","get","breed","Alert","props","role","className","type","style","width","margin","marginTop","children","Discover","state","image","match","matchCount","handleBtnClick","event","btnType","target","attributes","getNamedItem","value","newState","Math","floor","random","setState","loadNextDog","API","then","res","data","message","catch","err","console","log","this","href","Component","Hero","backgroundImage","Container","fluid","Row","Col","size","split","map","join","About","SearchForm","htmlFor","search","onChange","handleInputChange","name","list","placeholder","id","breeds","key","onClick","handleFormSubmit","SearchResults","results","result","alt","src","Search","error","preventDefault","status","Error","minHeight","opacity","marginBottom","Navbar","to","window","location","pathname","Footer","Wrapper","App","exact","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d25693f9.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the Dog.Ceo API\n\nexport default {\n  getRandomDog: function() {\n    return axios.get(\"https://dog.ceo/api/breeds/image/random\");\n  },\n  getDogsOfBreed: function(breed) {\n    return axios.get(\"https://dog.ceo/api/breed/\" + breed + \"/images\");\n  },\n  getBaseBreedsList: function() {\n    return axios.get(\"https://dog.ceo/api/breeds/list\");\n  }\n};\n","import React from \"react\";\n\nfunction Alert(props) {\n  return (\n    <div\n      role=\"alert\"\n      className={`alert alert-${props.type} fade in`}\n      style={{ width: \"80%\", margin: \"0 auto\", marginTop: 18, ...props.style }}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default Alert;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Card from \"../components/Card\";\nimport Alert from \"../components/Alert\";\n\nclass Discover extends Component {\n  state = {\n    image: \"\",\n    match: false,\n    matchCount: 0\n  };\n\n  // When the component mounts, load the next dog to be displayed\n  componentDidMount() {\n    this.loadNextDog();\n  }\n\n  handleBtnClick = event => {\n    // Get the data-value of the clicked button\n    const btnType = event.target.attributes.getNamedItem(\"data-value\").value;\n    // Clone this.state to the newState object\n    // We'll modify this object and use it to set our component's state\n    const newState = { ...this.state };\n\n    if (btnType === \"pick\") {\n      // Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\n      newState.match = 1 === Math.floor(Math.random() * 5) + 1;\n\n      // Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\n      newState.matchCount = newState.match\n        ? newState.matchCount + 1\n        : newState.matchCount;\n    } else {\n      // If we thumbs down'ed the dog, we haven't matched with it\n      newState.match = false;\n    }\n    // Replace our component's state with newState, load the next dog image\n    this.setState(newState);\n    this.loadNextDog();\n  };\n\n  loadNextDog = () => {\n    API.getRandomDog()\n      .then(res =>\n        this.setState({\n          image: res.data.message\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"text-center\">See my Projects!</h1>\n        <h2><a href=\"https://sanchez2194.github.io/Project-1/\"> Project 1 </a></h2>\n        <h2><a href=\"https://sanchez2194.github.io/Project-2/\"> Project 2 </a></h2>\n      </div>\n    );\n  }\n}\n\nexport default Discover;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Hero(props) {\n  return (\n    <div className=\"hero text-center\" style={{ backgroundImage: `url(${props.backgroundImage})` }}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Hero;\n","import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n}\n\nexport default Row;\n","import React from \"react\";\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return <div className={size} {...props} />;\n}\n\nexport default Col;\n","import React from \"react\";\nimport Hero from \"../components/Hero\";\nimport Container from \"../components/Container\";\nimport Row from \"../components/Row\";\nimport Col from \"../components/Col\";\n\nfunction About() {\n  return (\n    <div>\n      <Hero backgroundImage=\"https://mildaintrainings.com/wp-content/uploads/2017/11/react-logo.png\">\n        <h1>Anthony Sanchez</h1>\n        <h2>React Portfolio</h2>\n      </Hero>\n      <Container style={{ marginTop: 30 }}>\n        <Row>\n          <Col size=\"md-12\">\n            <h1>Welcome To My React Portfolio!</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <p>\n              This is my portfolio built with the React App! We are using our current knowledge to show off\n              some of our current skills with React. Feel free to browse around and see some of the stuff i have\n               been working on.\n            </p>\n            <p>\n              <h1>\n                About me\n              </h1>\n              <h3>\n                I am new to coding and have learned that this is the career path i want to head down.\n                In my mind i dont see the internet going anywhere anytime soon so why not become a web developer right?\n                So in my journey to become one of the best develpoers out there i decided to take a bootcamp to learn full-stack\n                developement in hopes of landing a job to better myself in the direction i want to head with my career\n              </h3>\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm(props) {\n  return (\n    <form className=\"search\">\n      <div className=\"form-group\">\n        <label htmlFor=\"breed\">Breed Name:</label>\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"breed\"\n          list=\"breeds\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Type in a dog breed to begin\"\n          id=\"breed\"\n        />\n        <datalist id=\"breeds\">\n          {props.breeds.map(breed => (\n            <option value={breed} key={breed} />\n          ))}\n        </datalist>\n        <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-success\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction SearchResults(props) {\n  return (\n    <ul className=\"list-group search-results\">\n      {props.results.map(result => (\n        <li key={result} className=\"list-group-item\">\n          <img alt=\"Dog\" src={result} className=\"img-fluid\" />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default SearchResults;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResults from \"../components/SearchResults\";\nimport Alert from \"../components/Alert\";\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n    breeds: [],\n    results: [],\n    error: \"\"\n  };\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  componentDidMount() {\n    API.getBaseBreedsList()\n      .then(res => this.setState({ breeds: res.data.message }))\n      .catch(err => console.log(err));\n  }\n\n  handleInputChange = event => {\n    this.setState({ search: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.getDogsOfBreed(this.state.search)\n      .then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n        this.setState({ results: res.data.message, error: \"\" });\n      })\n      .catch(err => this.setState({ error: err.message }));\n  };\n  render() {\n    return (\n      <div>\n        <Container style={{ minHeight: \"80%\" }}>\n          <h1 className=\"text-center\">Search By Breed!</h1>\n          <Alert\n            type=\"danger\"\n            style={{ opacity: this.state.error ? 1 : 0, marginBottom: 10 }}\n          >\n            {this.state.error}\n          </Alert>\n          <SearchForm\n            handleFormSubmit={this.handleFormSubmit}\n            handleInputChange={this.handleInputChange}\n            breeds={this.state.breeds}\n          />\n          <SearchResults results={this.state.results} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Anthony Sanchez\n      </Link>\n      <div>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link\n              to=\"/\"\n              className={\n                window.location.pathname === \"/\" || window.location.pathname === \"/about\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Home\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/discover\"\n              className={window.location.pathname === \"/discover\" ? \"nav-link active\" : \"nav-link\"}\n            >\n              Portfolio\n            </Link>\n          </li>\n\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>Pupster 2017</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Discover from \"./pages/Discover\";\nimport About from \"./pages/About\";\nimport Search from \"./pages/Search\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Wrapper from \"./components/Wrapper\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Wrapper>\n          <Route exact path=\"/\" component={About} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/discover\" component={Discover} />\n          <Route exact path=\"/search\" component={Search} />\n        </Wrapper>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}